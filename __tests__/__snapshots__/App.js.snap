// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView>
    <View
      style={
        Object {
          "flex": 1,
          "height": 1334,
        }
      }
    >
      <View>
        <View
          noShadow={true}
          style={
            Array [
              Object {
                "backgroundColor": "#607D8B",
                "borderBottomColor": "#a7a6ab",
                "borderBottomWidth": 0.5,
                "elevation": 0,
                "flexDirection": "row",
                "height": 64,
                "justifyContent": "center",
                "left": 0,
                "paddingLeft": 6,
                "paddingRight": 10,
                "paddingTop": 18,
                "right": 0,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
                "top": 0,
              },
              Object {
                "height": 0,
              },
            ]
          }
        />
      </View>
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={
          Array [
            Object {
              "padding": undefined,
            },
            Object {
              "backgroundColor": "#607D8B",
              "flex": 1,
            },
          ]
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEnabled={false}
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
        viewIsInsideTabBar={false}
      >
        <View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "testUri": "../../../src/assets/logo-transparent.png",
                  }
                }
                style={
                  Object {
                    "flex": 1,
                    "marginBottom": 24,
                    "marginLeft": 100,
                    "marginRight": 100,
                    "marginTop": 24,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "alignContent": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <ActivityIndicator
              animating={true}
              color="#FFC107"
              hidesWhenStopped={true}
              size="large"
              style={
                Array [
                  Object {
                    "height": 80,
                  },
                  Object {
                    "margin": 16,
                  },
                ]
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "maxHeight": "100%",
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "#757575",
              },
            ]
          }
          uppercase={false}
        />
        <RCTScrollView
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "marginHorizontal": -15,
              "marginTop": 15,
            }
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
